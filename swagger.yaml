openapi: 3.0.3
info:
  title: Food Delivery API
  description: API documentation for a food delivery application with customer and restaurant endpoints
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost/api
    description: Local development server

paths:
  # Customer Endpoints
  /restaurants:
    get:
      tags:
        - Customer - Restaurants
      summary: Get list of restaurants
      description: Retrieve a paginated list of restaurants with id and name only
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/RestaurantSummary'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'

  /restaurants/{restaurant}:
    get:
      tags:
        - Customer - Restaurants
      summary: Get restaurant details
      description: Retrieve detailed information about a specific restaurant
      parameters:
        - name: restaurant
          in: path
          required: true
          description: Restaurant ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '404':
          description: Restaurant not found

  /restaurants/{menu}/menu:
    get:
      tags:
        - Customer - Menu
      summary: Get restaurant menu
      description: Retrieve the menu for a restaurant with categories and items
      parameters:
        - name: menu
          in: path
          required: true
          description: Menu ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuCategory'
        '404':
          description: Menu not found

  /orders:
    post:
      tags:
        - Customer - Orders
      summary: Place a new order
      description: Create a new order for a customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceOrderRequest'
            example:
              restaurantId: 1
              items:
                - itemId: 1
                  quantity: 2
                  instructions: "Extra spicy"
                - itemId: 3
                  quantity: 1
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: array
                example: []
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  # Restaurant Endpoints
  /orders/:
    get:
      tags:
        - Restaurant - Orders
      summary: Get restaurant orders
      description: Retrieve a paginated list of orders for a restaurant
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  links:
                    $ref: '#/components/schemas/PaginationLinks'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'

  /orders/{order}:
    get:
      tags:
        - Restaurant - Orders
      summary: Get order details
      description: Retrieve detailed information about a specific order
      parameters:
        - name: order
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetails'
        '404':
          description: Order not found

    patch:
      tags:
        - Restaurant - Orders
      summary: Update order status
      description: Update the status of an existing order
      parameters:
        - name: order
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateStatusRequest'
            example:
              status: "preparing"
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                type: array
                example: []
        '404':
          description: Order not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

components:
  schemas:
    RestaurantSummary:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Pizza Palace"

    Restaurant:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Pizza Palace"
        address:
          type: string
          example: "123 Main Street"
        phone:
          type: string
          example: "+1234567890"
        email:
          type: string
          example: "contact@pizzapalace.com"
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    MenuCategory:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Appetizers"
        description:
          type: string
          example: "Start your meal with these delicious appetizers"
        items:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'

    MenuItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Margherita Pizza"
        description:
          type: string
          example: "Fresh tomato sauce, mozzarella, and basil"
        price:
          type: number
          format: decimal
          example: 14.99
        available:
          type: boolean
          example: true
        image_url:
          type: string
          nullable: true
          example: "/images/margherita.jpg"

    PlaceOrderRequest:
      type: object
      required:
        - restaurantId
        - items
      properties:
        restaurantId:
          type: integer
          example: 1
          description: ID of the restaurant
        items:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - itemId
              - quantity
            properties:
              itemId:
                type: integer
                example: 1
                description: ID of the menu item
              quantity:
                type: integer
                minimum: 1
                maximum: 10
                example: 2
                description: Quantity of the item
              instructions:
                type: string
                maxLength: 1024
                nullable: true
                example: "Extra spicy"
                description: Special instructions for the item

    OrderUpdateStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - received
            - preparing
            - ready
            - delivered
          example: "preparing"
          description: New status for the order

    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        customer_id:
          type: integer
          example: 1
        restaurant_id:
          type: integer
          example: 1
        status:
          type: string
          enum:
            - received
            - preparing
            - ready
            - delivered
          example: "received"
        total_amount:
          type: number
          format: decimal
          nullable: true
          example: 29.98
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    OrderDetails:
      type: object
      properties:
        id:
          type: integer
          example: 1
        customer_id:
          type: integer
          example: 1
        restaurant_id:
          type: integer
          example: 1
        status:
          type: string
          enum:
            - received
            - preparing
            - ready
            - delivered
          example: "preparing"
        total_amount:
          type: number
          format: decimal
          nullable: true
          example: 29.98
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        customer:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: "John Doe"
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              quantity:
                type: integer
                example: 2
              instructions:
                type: string
                nullable: true
                example: "Extra spicy"
              menu_item:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "Margherita Pizza"

    PaginationLinks:
      type: object
      properties:
        first:
          type: string
          nullable: true
          example: "http://localhost/api/restaurants?page=1"
        last:
          type: string
          nullable: true
          example: "http://localhost/api/restaurants?page=10"
        prev:
          type: string
          nullable: true
          example: "http://localhost/api/restaurants?page=1"
        next:
          type: string
          nullable: true
          example: "http://localhost/api/restaurants?page=3"

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
          example: 2
        from:
          type: integer
          nullable: true
          example: 16
        last_page:
          type: integer
          example: 10
        links:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                nullable: true
                example: "http://localhost/api/restaurants?page=1"
              label:
                type: string
                example: "&laquo; Previous"
              active:
                type: boolean
                example: false
        path:
          type: string
          example: "http://localhost/api/restaurants"
        per_page:
          type: integer
          example: 15
        to:
          type: integer
          nullable: true
          example: 30
        total:
          type: integer
          example: 150

    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: "The given data was invalid."
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            restaurantId:
              - "The restaurant id field is required."
            items:
              - "The items field is required."

tags:
  - name: Customer - Restaurants
    description: Customer endpoints for browsing restaurants
  - name: Customer - Menu
    description: Customer endpoints for viewing restaurant menus
  - name: Customer - Orders
    description: Customer endpoints for placing orders
  - name: Restaurant - Orders
    description: Restaurant endpoints for managing orders